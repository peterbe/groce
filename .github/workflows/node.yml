name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Cache node_modules
        uses: actions/cache@v2.1.6
        id: cached-node_modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('.github/workflows/node.yml') }}

      - name: Install
        if: steps.cached-node_modules.outputs.cache-hit != 'true'
        env:
          # This is because package.json contains `minimalcss` which depends
          # on `puppeteer`.
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 1
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        run: |
          # These are NOT secrets. It's public stuff.
          export PREACT_APP_FIREBASE_APIKEY=AIzaSyBfbOjXiFeMOBljhjZUxGSXHR5Ry0ienOs
          export PREACT_APP_FIREBASE_AUTHDOMAIN=thatsgroce.firebaseapp.com
          export PREACT_APP_FIREBASE_DATABASEURL=https://thatsgroce.firebaseio.com
          export PREACT_APP_FIREBASE_PROJECTID=thatsgroce
          export PREACT_APP_FIREBASE_STORAGEBUCKET=thatsgroce.appspot.com
          export PREACT_APP_FIREBASE_MESSAGINGSENDERID=190607180135
          export PREACT_APP_FIREBASE_APPID=1:190607180135:web:011ff0f368bd93b4cbefc2
          export PREACT_APP_FIREBASE_MEASUREMENTID=G-97FY43FWT4

          ./bin/build

      - name: Run tests
        run: |
          # Remember, these tests depend on the build!
          # It's for the headless tests's server.
          yarn test

      - name: Run dev server
        run: |
          yarn dev > /tmp/stdout.log 2> /tmp/stderr.log &

      - name: Wait for dev server
        run: |
          # Just a slight delay to wait until the dev server is ready.
          sleep 15
          curl --retry-connrefused --retry 10 http://localhost:8080 > /dev/null

      - name: Debug server's stdout and stderr if tests failed
        if: failure()
        run: |
          echo "STDOUT..................................................."
          cat /tmp/stdout.log
          echo ""
          echo "STDERR..................................................."
          cat /tmp/stderr.log
