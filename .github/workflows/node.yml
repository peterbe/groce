name: Node.js CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'yarn'

      - name: Cache node_modules
        uses: actions/cache@v2.1.6
        id: cached-node_modules
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}-${{ hashFiles('functions/yarn.lock') }}-${{ hashFiles('.github/workflows/node.yml') }}

      - name: Install
        if: steps.cached-node_modules.outputs.cache-hit != 'true'
        env:
          # This is because package.json contains `minimalcss` which depends
          # on `puppeteer`.
          PUPPETEER_SKIP_CHROMIUM_DOWNLOAD: 1
        run: yarn --frozen-lockfile

      - name: Lint
        run: yarn lint

      - name: Build
        env:
          PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome

          # These are NOT secrets. It's public stuff.
          PREACT_APP_FIREBASE_APIKEY: AIzaSyBlMzrsBR_KWXDdgntBgnCThjRqr-0I8js
          PREACT_APP_FIREBASE_AUTHDOMAIN: groce-dev.firebaseapp.com
          PREACT_APP_FIREBASE_DATABASEURL: https://groce-dev.firebaseio.com
          PREACT_APP_FIREBASE_PROJECTID: groce-dev
          PREACT_APP_FIREBASE_STORAGEBUCKET: groce-dev.appspot.com
          PREACT_APP_FIREBASE_MESSAGINGSENDERID: 170241343352
          PREACT_APP_FIREBASE_APPID: 1:170241343352:web:5282dd555337af2a62d28d
        run: ./bin/build

      # - name: Run tests
      #   env:
      #     PUPPETEER_EXECUTABLE_PATH: /usr/bin/google-chrome
      #   run: |
      #     # Remember, these tests depend on the build!
      #     # It's for the headless tests's server.
      #     yarn test

      - name: Run dev server
        run: yarn dev > /tmp/stdout.log 2> /tmp/stderr.log &

      - name: Wait for dev server
        run: |
          # Just a slight delay to wait until the dev server is ready.
          sleep 10
          curl --retry-connrefused --retry 5 http://localhost:8080 > /dev/null

      - name: Debug server's stdout and stderr if tests failed
        if: failure()
        run: |
          echo "STDOUT..................................................."
          cat /tmp/stdout.log
          echo ""
          echo "STDERR..................................................."
          cat /tmp/stderr.log
